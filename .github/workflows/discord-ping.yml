name: Discord embed ping

on:
  push:
    branches: [ main ]          # ← zmień, jeśli używasz innej gałęzi

jobs:
  notify:
    runs-on: ubuntu-latest

    steps:
    # 1️⃣  Klon repo z co najmniej dwoma commitami (potrzebne do git diff)
    - uses: actions/checkout@v4
      with:
        fetch-depth: 2          # 0 = cała historia; 2 jest szybsze i wystarcza

    # 2️⃣  (opcjonalnie) doinstaluj jq, jeśli runner kiedyś by go nie miał
    - name: Ensure jq is present
      run: sudo apt-get update && sudo apt-get install -y jq

    # 3️⃣  Zbierz listę zmienionych plików
    - name: Collect changed files
      id: diff
      run: |
        BEFORE="${{ github.event.before }}"
        AFTER="${{ github.event.after }}"

        # Jeśli to pierwszy push (BEFORE = 0000...), zrób diff tylko względem AFTER
        if [[ "$BEFORE" == "0000000000000000000000000000000000000000" ]]; then
          ALL=$(git diff --name-only "$AFTER")
        else
          ALL=$(git diff --name-only "$BEFORE" "$AFTER")
        fi

        LIST=$(echo "$ALL" | head -n 15 | paste -sd '\n' -)
        COUNT=$(echo "$ALL" | wc -l)

        {
          echo 'list<<EOF'
          echo "$LIST"
          echo 'EOF'
          echo "count=$COUNT"
        } >> "$GITHUB_OUTPUT"

    # 4️⃣  Wyślij embed do Discorda
    - name: Send Discord embed
      env:
        WEBHOOK_URL: ${{ secrets.DISCORD_WEBHOOK }}
        REPO:        ${{ github.repository }}
        BRANCH:      ${{ github.ref_name }}
        ACTOR:       ${{ github.actor }}
        SHA:         ${{ github.sha }}
        COMMIT_URL:  ${{ github.event.head_commit.url }}
        COMMIT_MSG:  ${{ github.event.head_commit.message }}
        FILE_LIST:   ${{ steps.diff.outputs.list }}
        FILE_COUNT:  ${{ steps.diff.outputs.count }}
      run: |
        set -e

        # 0️⃣ Walidacja sekretu
        if [ -z "$WEBHOOK_URL" ]; then
          echo "::error::Sekret DISCORD_WEBHOOK jest pusty – ustaw go w Settings → Secrets"
          exit 1
        fi

        # 1️⃣ Przytnij commit-message do 1900 znaków
        SHORT_MSG=$(echo "$COMMIT_MSG" | head -c 1900)

        # 2️⃣ Wartość pola „Zmodyfikowane pliki”
        if [ -z "$FILE_LIST" ]; then
          FILES_VALUE="— brak zmian —"
        else
          FILES_VALUE="$FILE_LIST"
        fi

        # 3️⃣ Zbuduj JSON webhooka (bez żadnych ternary w jq)
        JSON=$(jq -n \
          --arg content "@everyone" \
          --arg title   "Push ➜ $REPO [$BRANCH]" \
          --arg desc    "**$ACTOR** wypchnął commit [`${SHA:0:7}`]($COMMIT_URL)" \
          --arg msg     "$SHORT_MSG" \
          --arg files   "$FILES_VALUE" \
          --arg count   "$FILE_COUNT" \
          --argjson color 5814783 \
          '{
             content: $content,
             embeds: [{
               title: $title,
               description: ($desc + "\n\n" + $msg),
               color: $color,
               fields: [{
                 name: ("Zmodyfikowane pliki (" + $count + ")"),
                 value: $files,
                 inline: false
               }]
             }]
           }')

        echo "== JSON do Discorda =="
        echo "$JSON"

        # 4️⃣ Wyślij POST i sprawdź kod HTTP
        HTTP=$(curl -sSL -o /dev/null -w '%{http_code}' \
                 -H "Content-Type: application/json" \
                 -d "$JSON" "$WEBHOOK_URL")

        echo "Discord zwrócił HTTP $HTTP"
        if [ "$HTTP" -ne 204 ]; then
          echo "::error::Discord zwrócił nieoczekiwany kod $HTTP"
          exit 1
        fi

