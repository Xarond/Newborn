name: discord-embed-ping

on:
  push:
    branches: [ main ]        # ← zmień, jeśli potrzebujesz innej gałęzi

jobs:
  notify:
    runs-on: ubuntu-latest

    steps:
      # 1️⃣ pobranie kodu – dwa commity wystarczą do diff-a
      - uses: actions/checkout@v4
        with:
          fetch-depth: 2

      # 2️⃣ lista zmienionych plików + licznik
      - id: files
        run: |
          before='${{ github.event.before }}'
          after='${{ github.event.after }}'

          if [[ "$before" == 0000000000000000000000000000000000000000 ]]; then
            all=$(git diff --name-only "$after")
          else
            all=$(git diff --name-only "$before" "$after")
          fi

          echo "count=$(echo "$all" | wc -l)" >>"$GITHUB_OUTPUT"
          {
            echo 'list<<EOF'
            echo "$all" | head -n 15
            echo EOF
          } >>"$GITHUB_OUTPUT"

      # 3️⃣ wysyłka ładnego embeda
      - name: Send Discord embed
        env:
          HOOK:  ${{ secrets.DISCORD_WEBHOOK }}

          # ∙ kontekst Gita
          REPO:   ${{ github.repository }}
          BRANCH: ${{ github.ref_name }}
          ACTOR:  ${{ github.actor }}
          SHA:    ${{ github.sha }}
          URL:    ${{ github.event.head_commit.url }}
          MSG:    ${{ github.event.head_commit.message }}

          # ∙ dane z kroku files
          FILES:  ${{ steps.files.outputs.list }}
          CNT:    ${{ steps.files.outputs.count }}
        run: |
          set -euo pipefail
          [[ -z "$HOOK" ]] && { echo "::error::Sekret DISCORD_WEBHOOK nie ustawiony"; exit 1; }

          first_line=$(printf '%s' "$MSG" | head -n1 | head -c256)

          if [[ -z "$FILES" ]]; then
            block="(brak zmian)"
          else
            block=$(printf '%s\n' "$FILES" | head -n10)
            (( CNT > 10 )) && block+="
…i $((CNT-10)) więcej"
          fi
          block="\`\`\`
${block}
\`\`\`"

          # konstruujemy JSON małym Pythoniem (żadnych heredoców w YAML!)
          python3 - <<PY >payload.json
import json, os, datetime, html
print(json.dumps({
  "content": "@everyone",
  "embeds": [{
    "title": f"Push → {os.environ['REPO']} [{os.environ['BRANCH']}]",
    "url":   os.environ["URL"],
    "color": 5814783,
    "author": {
      "name": os.environ["ACTOR"],
      "url":  f"https://github.com/{os.environ['ACTOR']}",
      "icon_url": f"https://github.com/{os.environ['ACTOR']}.png?size=40"
    },
    "fields": [
      {"name": "Commit",
       "value": html.escape(os.environ["first_line"]),
       "inline": False},
      {"name": f"Pliki ({os.environ['CNT']})",
       "value": os.environ["block"],
       "inline": False}
    ],
    "footer": {"text": f"SHA {os.environ['SHA'][:7]}"},
    "timestamp": datetime.datetime.utcnow().isoformat(timespec='seconds')+"Z"
  }]
}))
PY

          code=$(curl -sSL -o /dev/null -w '%{http_code}' \
                 -H "Content-Type: application/json" \
                 -d @payload.json "$HOOK")
          echo "Discord HTTP $code"
          [[ "$code" != 204 ]] && exit 1
